name: C/C++ CI

on:
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize and update git submodules
        run: |
          git submodule init
          git submodule update --recursive

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          xargs -a dependencies-linux.txt sudo apt-get install -y

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes

      - name: Install vcpkg (Windows)
        if: runner.os == 'Windows'
        run: |
          if (!(Test-Path -Path "C:/Dev/vcpkg")) {
            git clone https://github.com/microsoft/vcpkg.git C:/Dev/vcpkg
            cd C:/Dev/vcpkg
            .\bootstrap-vcpkg.bat
          }

      - name: Install vcpkg dependencies (Windows)
        if: runner.os == 'Windows'
        run: Get-Content dependencies-windows.txt | ForEach-Object { C:/Dev/vcpkg/vcpkg.exe install $_ }

      - name: Configure CMake
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=C:/Dev/vcpkg/scripts/buildsystems/vcpkg.cmake
          else
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug
          fi

      - name: Build
        run: cmake --build build

#      - name: Run tests
#        run: ctest --test-dir build
#        continue-on-error: true
